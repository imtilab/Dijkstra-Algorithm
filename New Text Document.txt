//    public void setPriority() {
 //       Priority.setPriority(queue, distance);
        
//        //put vertices and respective distance in nodeArray
//        int queueSize = queue.size();
//        Node[] nodeArray = new Node[queueSize];
//        for (int i = 0; i < queueSize; i++) {
//            int vertex = queue.poll();
//            nodeArray[i] = new Node(vertex, distance[vertex]);
//        }
//        queue.clear();
//        
//        //sorting nodes based on distance of vertices
//        for (int i = 0; i < nodeArray.length; i++) {
//            for (int j = nodeArray.length - 1; j > i; j--) {
//                if (nodeArray[j].verDist < nodeArray[j - 1].verDist) {
//                    Node temp = nodeArray[j];
//                    nodeArray[j] = nodeArray[j - 1];
//                    nodeArray[j - 1] = temp;
//                }
//            }
//        }
//        //add sorted vertices back to the queue
//        for (int i = 0; i < nodeArray.length; i++) {
//            queue.add(nodeArray[i].ver);
//        }
//    }